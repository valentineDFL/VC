@page "/resources"
@using VC.WebUi.Services
@inject ApiService ApiService

<h3>Ресурсы</h3>

@if (_loading)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Название</th>
                <th>Описание</th>
                <th>Количество</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var resource in _resources)
            {
                <tr>
                    <td>@resource.Id</td>
                    <td>@resource.Title</td>
                    <td>@resource.Description</td>
                    <td>@resource.Count</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => DeleteResource(resource.Id)">Удалить</button>
                        <button class="btn btn-warning ms-2" @onclick="() => ShowEditForm(resource)">Изменить</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (_showCreateForm || _showEditForm)
{
    <h4>@(_showEditForm ? "Редактировать ресурс" : "Добавить новый ресурс")</h4>
    <EditForm Model="@_currentResource" OnValidSubmit="@SubmitResource">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mb-2">
            <label>Название</label>
            <InputText @bind-Value="_currentResource.Title" class="form-control" />
            <ValidationMessage For="@(() => _currentResource.Title)" />
        </div>

        <div class="form-group mb-2">
            <label>Описание</label>
            <InputText @bind-Value="_currentResource.Description" class="form-control" />
        </div>

        <div class="form-group mb-2">
            <label>Количество</label>
            <InputNumber @bind-Value="_currentResource.Count" class="form-control" />
            <ValidationMessage For="@(() => _currentResource.Count)" />
        </div>

        <button type="submit" class="btn btn-success">Сохранить</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick="ResetForm">Отмена</button>
    </EditForm>
}
else
{
    <button class="btn btn-primary" @onclick="ShowCreateForm">Добавить ресурс</button>
}

@code {
    private bool _loading = true;
    private bool _showCreateForm = false;
    private bool _showEditForm = false;

    private List<Resource2> _resources = new();
    private Resource2 _currentResource = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadResources();
    }

    private async Task LoadResources()
    {
        _resources = (await ApiService.GetAllResourcesAsync()).ToList();
        _loading = false;
    }

    private void ShowCreateForm()
    {
        _currentResource = new Resource2();
        _showCreateForm = true;
        _showEditForm = false;
    }

    private void ShowEditForm(Resource2 resource)
    {
        _currentResource = new Resource2
        {
            Id = resource.Id,
            Title = resource.Title,
            Description = resource.Description,
            Count = resource.Count
        };
        _showEditForm = true;
        _showCreateForm = false;
    }

    private async Task SubmitResource()
    {
        ResultOfGuid result;

        if (_showCreateForm)
        {
            var request = new CreateResourceRequest
            {
                Title = _currentResource.Title,
                Description = _currentResource.Description ?? "",
                Count = _currentResource.Count
            };

            result = await ApiService.CreateResourceAsync(request);
        }
        else
        {
            var request = new UpdateResourceRequest
            {
                Title = _currentResource.Title,
                Description = _currentResource.Description ?? "",
                Count = _currentResource.Count
            };

            result = await ApiService.UpdateResourceAsync(_currentResource.Id, request);
        }

        if (result.IsSuccess)
        {
            await LoadResources();
            ResetForm();
        }
        else
        {
            // TODO: показать ошибки пользователю
            foreach (var error in result.Errors ?? new List<IError>())
            {
                Console.WriteLine($"Ошибка: {error.Message}");
            }
        }
    }

    private void ResetForm()
    {
        _showCreateForm = false;
        _showEditForm = false;
        _currentResource = new Resource2();
    }

    private async Task DeleteResource(Guid resourceId)
    { 
        await ApiService.DeleteResourceAsync(resourceId);
        _loading = true;
        await LoadResources();
    }

}